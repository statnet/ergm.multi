% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InitErgmTerm.dgw_sp.R
\name{ddspL-ergmTerm}
\alias{ddspL-ergmTerm}
\alias{InitErgmTerm.ddspL}
\title{Directed dyadwise shared partners}
\usage{
# binary: ddspL(d, type="OTP", Ls.path=NULL, L.in_order=FALSE)
}
\description{
Directed dyadwise shared partners
}
\details{
This term adds one network statistic to the model for each element in \code{d} where the \eqn{i} th such statistic equals the number of dyads in the network with exactly \code{d[i]} shared partners. This term can only be used with directed networks. Multiple shared partner definitions are possible; the \code{type} argument may be used to select the type of shared partner to be counted (see below for type codes). By default, outgoing two-paths are employed.

While there is only one shared partner configuration in the undirected case, nine distinct configurations are possible for directed graphs. Currently, edgewise shared partner terms may be defined with respect to five of these configurations; they are defined here as follows (using terminology from Butts (2008) and the \code{relevent} package):
\enumerate{
\item \emph{Outgoing Two-path (OTP)} vertex \eqn{k} is an OTP shared partner of ordered pair \eqn{(i,j)} iff \eqn{i \to k \to j}{i->k->j}. Also known as "transitive shared partner".
\item \emph{Incoming Two-path (ITP)} vertex \eqn{k} is an ITP shared partner of ordered pair \eqn{(i,j)} iff \eqn{j \to k \to i}{j->k->i}. Also known as "cyclical shared partner"
\item \emph{Outgoing Shared Partner (OSP)} vertex \eqn{k} is an OSP shared partner of ordered pair \eqn{(i,j)} iff \eqn{i \to k, j \to k}{i->k, j->k}.
\item \emph{Incoming Shared Partner (ISP)} vertex \eqn{k} is an ISP shared partner of ordered pair \eqn{(i,j)} iff \eqn{k \to i, k \to j}{k->i, k->j}.
}

Note that Robins et al. (2009) define closely related statistics to several of the above, using slightly different terminology.

For a multilayer network, a vector of one or two formulas
\code{Ls.path} provides the layer specifications for the ties of the
2-path or the shared partnership. (If only one formula is given the
layers are assumed to be the same.) If \code{L.in_order==TRUE} , the
first tie of the two-path must be the first element of \code{Ls.path}
and the second must be the second; otherwise, any ordering counts, provided there is exactly one of each.

This and related terms take an additional term option (via the
\code{control$term.option} list), \code{cache.sp} controlling whether the
implementation will cache the number of shared partners for each dyad
in the network. This has a memory cost but may significuantly speed
up calculation, particularly for denser networks.
}
\concept{directed}
\concept{layer-aware}
\concept{undirected}
